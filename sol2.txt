



2=====
import os
import random
import re
import sys

# Complete the superReducedString function below.
def superReducedString(s):
    
    s = list(s)
    i = 0
    while(i < len(s)-1):
        if(s[i] == s[i+1]):
            del(s[i])
            del(s[i])
            i = 0
        else: 
            i+=1
    ans = ''
    for i in range(len(s)):
        ans += s[i]
    if(ans == ''):
        return "Empty String"
    return ans

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    s = input()

    result = superReducedString(s)

    fptr.write(result + '\n')

    fptr.close()


3===========

#!/bin/python3

import math
import os
import random
import re
import sys

# Complete the acmTeam function below.
def  countSetBits(n): 
    count = 0
    while (n): 
        count += n & 1
        n >>= 1
    return count
def acmTeam(topic):
    max_t = len(topic[0])
    team_max = 0
    combi = 0
    l = len(topic)
    for i in range(l-1):
        for j in range(i+1, l):
            total = int(topic[i], 2) | int(topic[j], 2)
            bits = countSetBits(total)
            if(bits > team_max):
                combi = 1
                team_max = bits
                continue
            if( bits >= team_max):
                team_max = bits
                combi += 1
    return [team_max, combi]

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    nm = input().split()

    n = int(nm[0])

    m = int(nm[1])

    topic = []

    for _ in range(n):
        topic_item = input()
        topic.append(topic_item)

    result = acmTeam(topic)

    fptr.write('\n'.join(map(str, result)))
    fptr.write('\n')

    fptr.close()
